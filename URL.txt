http://product.hubspot.com/blog/git-and-github-tutorial-for-beginners

http://readwrite.com/2013/09/30/understanding-github-a-journey-for-beginners-part-1


How to Check Out a Previous Version from GitHub Repository


http://rayshobby.net/how-to-check-out-a-previous-version-from-github-repository/


https://guides.github.com/activities/hello-world/


https://www.youtube.com/watch?v=73I5dRucCds

The mysterious Git: Using Git with Dreamweaver and Bitbucket - See more at:

http://bbdokc.com/blog/the-mysterious-git-using-git-with-dreamweaver-and-bitbucket


https://www.youtube.com/user/cogee/videos

Sublime Text Tutorial: How To Use GIT With SideBarGit | WDTutorials.com

https://www.youtube.com/watch?v=TIxRvmPi5rY



Difference Git Pull vs. Pull Request
======================================
If you use git pull, you pull the changes from the remote repository into yours.

If you send a pull request to another repository, you ask their maintainers to pull your changes into theirs (you more or less ask them to use a git pull from your repository).

If you are the maintainer of that repository, it seems you're making it a bit more difficult by pretending you're playing two roles in that workflow. You might as well merge locally your development branch into your master branch and push that master branch into your GitHub repository directly.

(As a side note, if you're new to Git, I'd suggest using git fetch and then git merge instead of git pull. git pull is effectively git fetch followed by git merge, but doing them separately gives you better control over potential conflicts.)
